name: BuildTestLint
run-name: Building Testing Linting.
on:
  - push
  - pull_request
jobs:
  install-cache:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 19.x ]
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3

      - name: Cache node modules
        uses: actions/cache@v3
        id: cache-npm
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install

      - name: Install dependencies
        run: npm ci
  build:
    runs-on: ubuntu-latest
    needs: install-cache
    strategy:
      matrix:
        node-version: [ 19.x ]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: build prod version of project
        run: npm run build:prod
      - name: lint ts and tsx
        run: npm run lint:ts
      - name: lint style scss
        run: npm run lint:scss
      - name: test unit
        run: npm run test:unit
      - name: build storybook
        run: npm run storybook:build
      - name: test ui (screenshots)
        run: npm run test:ui:ci


